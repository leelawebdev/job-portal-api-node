// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  name String?
  email String @unique
  password String
  role Role @default(CANDIDATE)
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt 
  is_active Boolean @default(true)
  canditateProfile CandidateProfile?
}

model CandidateProfile {
  id Int @id @default(autoincrement())
  fullName String
  gender Gender
  phone String
  cv String
  birthDate DateTime
  address String
  openToWork Boolean @default(false)
  status Boolean @default(true)
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
  CandidateLanguages CandidateLanguages[]
}


model Language {
  id Int @id @default(autoincrement())
  name String @unique
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt 
  CandidateLanguages CandidateLanguages[]
}


model CandidateLanguages {
  id Int @id @default(autoincrement())
  candidateProfileId Int
  candidateProfile CandidateProfile @relation(fields: [candidateProfileId], references: [id])
  languageId Int
  language Language @relation(fields: [languageId], references: [id])
  level Level

  @@unique([candidateProfileId, languageId])
}

enum Level {
  BASIC
  INTERMEDIATE
  ADVANCED
  FLUENT
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  CANDIDATE
  RECRUITER
}